version: 2.1
orbs:
  nx: nrwl/nx@1.6.2
jobs:
  setup_node:
    resource_class: small
    docker:
      - image: cimg/node:18.19.0
    steps:
      - checkout
      - nx/set-shas
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            sudo corepack enable
            sudo corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install Dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
  build:
    resource_class: medium
    docker:
      - image: cimg/node:18.19.0
    steps:
      - attach_workspace:
          at: ~/project
      - run: npx nx-cloud start-ci-run --stop-agents-after=build
      - run:
          name: Run Tests
          command: |
            npx nx-cloud record -- npx nx affected --target=test --parallel=2 --base=$NX_BASE --head=$NX_HEAD
      - run:
          name: Prepare Build
          command: |
            npx nx-cloud record -- npx nx affected --target=build --parallel=2 --base=$NX_BASE --head=$NX_HEAD
  release:
    resource_class: small
    docker:
      - image: cimg/node:18.19.0
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Fix hosts unknown for Github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Prepare Release
          command: |
            npx nx-cloud record -- npx nx affected --target=release --parallel=false --base=$NX_BASE --head=$NX_HEAD
      - run:
          name: Publish Release
          command: |
            npx nx-cloud record -- npx nx affected --target=release-publish --parallel=2 --base=$NX_BASE --head=$NX_HEAD
  setup_agents:
    docker:
      - image: cimg/node:18.19.0
    parameters:
      ordinal:
        type: integer
    steps:
      - checkout
      - run:
          command: npx nx-cloud start-agent
          no_output_timeout: 15m

workflows:
  deploy:
    jobs:
      - setup_node
      - setup_agents:
          matrix:
            parameters:
              ordinal: [1, 2, 3]
          requires:
            - setup_node
      - build:
          requires:
            - setup_agents
      - release:
          requires:
            - build
